/*========================================================================*/
/* NOM DU FICHIER  : td_exploit.h			                              */
/*========================================================================*/
/* Compilateur     : GCC                                                  */
/* Linking locator : GCC                                                  */
/* Formatter       : GCC                                                  */
/* Auteur          : CM                                                   */
/* Date			   : 09/09/2009                                           */
/* Libelle         : Base de données: Type def exploitation				  */
/* Projet          : WRM100                                               */
/* Indice          : BE060                                                */
/*========================================================================*/
/* Historique      :                                                      */
//BE000 09/09/09 CM
// - CREATION
//BE003 22/12/2009 CM
// - Ajout exploitation adresse IP/Mask des interfaces
//BE005 14/01/2010 CM
// - Intégration serveur DHCP + relai DHCP
//BE007 25/01/2010 CM
// - Ajout exploitation de l'ACCESS POINT
//BE009 01/02/2010 CM
// - Ajout client NTP
//BE010 03/02/2010 CM
// - Ajout information statut IP des interfaces
//BE031.3 08/06/2010 JP
// - dans la page test production final, l'etat de la connexion de la station est memorise avec code couleur (rouge, orange,vert)
//BE037 06/07/2010 CM
// - Ajout exploitation temperature 
// - Ajout récupération statut ethernet des 2 ports ethernet
// - Ajout exploitation du client NTP
//BE046 17/11/2010 CM
// - Correction alarme Ethernet pour chaque accès
//	alarme ethernet lan 1 et alarme ethernet lan 2
//	L'alarme "ethernet lan 2" est non validée par défaut
//	+ aussi disponible sur ACCESS POINT
//BE047 29/11/2010 CM
// - Gestion mode dégradé - connection à AP impossible en permanence suite à configuration wifi 
//BE050 09/12/2010 CM
// - Correction gestion NTP/SNTP
//BE051 13/12/2010 CM
// - Ajout exploitation SSID (utile si dual ssid activé)
// - Correction gestion alarme niveau rx de la station
//BE058 21/01/2011 CM
// - Ajout dans exploitation du canal en cours (sur AP et STA)
//BE060 16/03/2011
// - DEP: Ajout des évenements de connexion et déconnexion d'une STATION
/*========================================================================*/


/*_____I - COMMENTAIRES - DEFINITIONS -  REMARQUES _______________________*/


/*_____II - DEFINE SBIT __________________________________________________*/


//Variable : S_STRUCT_EXPLOITATION
//Champs : s_general.s_version[]
enum LISTE_DES_VERSIONS_LOGICIELLES
{
	VERSION_LOGICIELLE_APPLI_CPU = 0,
	VERSION_LOGICIELLE_BOOT_CPU,
	NB_MAX_VERSIONS_LOGICIELLES
};
#define TAILLE_MAX_MSG_VERSION	6

//Variable : S_STRUCT_EXPLOITATION
//Champs : s_general.ps8_version_be_uboot[] 
#define TAILLE_MAX_MSG_VERSION_UBOOT 50

//Variable : S_STRUCT_EXPLOITATION
//Champs : s_general.s_option[]
enum LISTE_DES_OPTIONS
{
	OPTION_AUCUNE =0,
	NB_MAX_OPTIONS
};

//Variable : S_STRUCT_EXPLOITATION
//Champs : s_general.s_version[].u8_info_suppl
#define	INFO_VERSION_PROG_ACTIF		1
#define	INFO_VERSION_PROG_INACTIF	2
#define	INFO_VERSION_NON_UTILISE	3
#define	INFO_VERSION_PROG_NUMERO_1  4
#define	INFO_VERSION_PROG_NUMERO_2  5

//Variable : S_STRUCT_EXPLOITATION
//Champs : s_general.u8_type_equipement
enum LISTE_DES_TYPES_EQUIPEMENTS
{
	EQUIPEMENT_WRM100 = 0,
	EQUIPEMENT_INCONNU,
	NB_MAX_EQUIPEMENTS
};

//Variable : S_STRUCT_EXPLOITATION
//Champs : s_general.u8_link_statut_ethernet[NB_MAX_PORTS_ETHERNET]
enum LISTE_PORTS_ETHERNET
{
	PORT_ETHERNET_1 = 0,
	PORT_ETHERNET_2,
	NB_MAX_PORTS_ETHERNET
};

//Variable : S_STRUCT_EXPLOITATION
//Champs : s_general.s32_temperature
#define VALEUR_TEMPERATURE_INCONNUE	0xFFFFFFFF

//Variable : S_STRUCT_EXP_STATION
//Champs : u8_statut_connexion
enum LIST_STATUT_CONNEXION
{
	STATUT_CONNEXION__NOT_ASSOCIATED = 0,
	STATUT_CONNEXION__INVALID,
	STATUT_CONNEXION__NONE,
	STATUT_CONNEXION__ASSOCIATED,
	NB_MAX_STATUT_CONNEXION
};

//Variable : S_STRUCT_EXP_STATION
//Champs : s32_rssi_dbm
#define VALEUR_RSSI_MIN (-96) //dBm
#define VALEUR_RSSI_NULL (-999) //dBm

//Variable : S_STRUC_EXP_ACCESS_POINT
//Champs : s_wifi_client[[].u32_statut
enum LIST_STATUT_CLIENT_WIFI
{
	BIT0_STA_CLIENTWIFI_AUTHENTICATED = 0,
	BIT1_STA_CLIENTWIFI_ASSOCIATED,
	BIT2_STA_CLIENTWIFI_AUTHORIZED,
	NB_MAX_BITS_STA_CLIENTWIFI
};

//Variable : S_STRUCT_EXP_DHCP
//Champs : s_client_connected[]
#define NB_MAX_CLIENTS_DHCP	254



/*_____III - DEFINITIONS DE TYPES_________________________________________*/

//*******************************
//Paramètres d'exploitation générale
//*******************************
//Définition d'une version logicielle
typedef struct 
{
	s8sod	ps8_message[TAILLE_MAX_MSG_VERSION+1];	//version textuelle
	u8sod	u8_info_suppl;		//Information supplémentaire sur la version
}S_STRUCT_VERSION;

//Définition d'une option
typedef struct 
{
	u8sod	u8_presence;		//Information de présence ou non de l'option (TRUE ou FALSE)
}S_STRUCT_OPTION;

//Définition d'une interface
typedef struct 
{
	u8sod	u8_presence;		//Information de présence ou non l'interface (TRUE ou FALSE)
	u8sod	pu8_add_mac[ETHER_ADDR_LEN]; //Adresse MAC de l'interface
	u8sod	u8_statut_ip;		//Statut de l'adresse IP (statique, en cours d'acquisition DHCP, acquise via serveur DHCP, replie suite échec DHCP)
	s8sod	ps8_add_ip	[MAX_LG_FORMAT_ADRESSE_IP + 1]; //Adresse IP de l'interface
	s8sod	ps8_mask	[MAX_LG_FORMAT_ADRESSE_IP + 1]; //Masque de sous-reseau de l'interface
}S_STRUCT_EXP_INTERFACE;

typedef struct 
{
	S_STRUCT_VERSION	s_version[NB_MAX_VERSIONS_LOGICIELLES];	//Versions logicielles de l'équipement
	s8sod				ps8_version_be_uboot[TAILLE_MAX_MSG_VERSION_UBOOT +1];	//version BE Uboot 
	u8sod				u8_type_equipement;						//Type de l'équipement
	S_STRUCT_OPTION		s_option[NB_MAX_OPTIONS];				//Liste des options de l'équipement

	u8sod				pu8_presence_serveur_ntp[NB_MAX_SERVEURS_NTP];			//Présence du serveur NTP (si celui-ci est configuré)

	S_STRUCT_DATE		s_date_dernier_reset_alarme_statut_event;	//Date/heure du dernier reset des alarmes mémorisées dans statut_events

	S_STRUCT_EXP_INTERFACE	ps_interface[NB_MAX_INTERFACES];

	u8sod				u8_link_statut_ethernet[NB_MAX_PORTS_ETHERNET];	//Statut de l'accès Ethernet LAN 1 (TRUE: connecté, FALSE: non connecté)
	
	s32sod				s32_temperature;	//température mesurée en °Celsius
	
}S_STRUC_EXP_GENERAL;


//*******************************
//Paramètres d'exploitation STATION
//*******************************
typedef struct 
{
	u8sod		u8_old_statut_connexion;//Indique l'ancien statut de connexion à une BSS (Basic Service Set) pour affichage page test final

	u8sod		u8_statut_connexion;	//Indique le statut de connexion à une BSS (Basic Service Set)
										//	(Pour iwconfig : retourne les 4 valeurs suivantes)
										//		- not-associated: quand aucune connexion à un AP n'est effectuée
										//		- invalid: quand l'adresse MAC de l'AP est FF:FF:FF:FF:FF:FF
										//		- none:  quand l'adresse MAC de l'AP est 44:44:44:44:44:44
										//		- associated: quand l'adresse MAC de l'AP est valide.

	u8sod		pu8_bssid_add_mac[ETHER_ADDR_LEN]; //Information BSSID (adresse MAC de l'Access Point auquel est connecté la station)
	s32sod		s32_rssi_dbm;	//RSSI: niveau du signal reçu (dBm)
	u32sod		u32_cptsecond_noconnected;	//Temps que la station n'est pas connectée (en mode securisé)
	s8sod		ps8_ssid_inprogress[NB_MAX_CHAINE_SSID + 1]; //SSID en cours (Service Set IDentifier) sur le quel la station s'est connectée (utile quand ssid dual activé)
	u16sod		u16_channel_inprogress;		//numéro du canal en cours donné par le Driver-N
	u16sod		u16_freq_MHz_inprogress;	//Fréquence en MHz du canal en cours donné par le Driver-N
	
}S_STRUCT_EXP_STATION;

//*******************************
//Paramètres d'exploitation ACCESS POINT
//*******************************
typedef struct 
{
	u8sod		u8_present;		//Présence du client (TRUE ou FALSE)
	u8sod		u8_flag_maj;	//Signale si ce client Wifi est maj
	u8sod		pu8_add_mac[ETHER_ADDR_LEN]; //Adresse MAC du client wifi
	u32sod		u32_add_ip;		//Adresse IP du client wifi
	s32sod		s32_rssi_dbm;	//RSSI: niveau du signal reçu (dBm)
	u32sod		u32_statut;		//Statut du client (Authentifié, asssocié, authorisé)
	u32sod		u32_time_reconnexion;	//Horodatage de re-connexion du client

}S_STRUCT_EXP_WIFI_CLIENT;

typedef struct 
{
	u16sod	u16_nb_associations;	//Nombre de stations associées à cet AP
	S_STRUCT_EXP_WIFI_CLIENT s_wifi_client[NB_ASSOCIATED_STATIONS_MAX]; //Liste des clients Wifi connectés à cet AP
	u16sod		u16_channel_inprogress;		//numéro du canal en cours donné par le Driver-N
	u16sod		u16_freq_MHz_inprogress;	//Fréquence en MHz du canal en cours donné par le Driver-N
	
}S_STRUC_EXP_ACCESS_POINT;


//*******************************
//Paramètres d'exploitation DHCP
//*******************************
typedef struct 
{
	u8sod	u8_present;					//Présence du client DHCP
	u8sod	u8_flag_maj;				//Signale si ce client DHCP est maj
	u8sod	pu8_add_mac[ETHER_ADDR_LEN];//Adresse MAC du client DHCP
	u32sod	u32_adresse_ip;				//Adresse IP du client DHCP
	u32sod	u32_temps_restant;			//Temps restant du bail (en seconde)
}S_STRUCT_EXP_CLIENT_DHCP;

typedef struct 
{
	u8sod	u8_server_dhcp_full;	//Signale que le serveur DHCP ne peut plus allouer une adresse IP
	u16sod	u16_nb_clients;		//Nombre de clients qui ont un bail avec le serveur DHCP
	//Liste des clients DHCP du serveur DHCP interne
	S_STRUCT_EXP_CLIENT_DHCP	s_client_connected[NB_MAX_CLIENTS_DHCP];

}S_STRUCT_EXP_DHCP;


//*****************************************
/* structure exploitation de l'équipement */
//*****************************************
typedef struct 
{
	S_STRUC_EXP_GENERAL			s_general;	//Paramètres d'exploitation générale
	S_STRUCT_EXP_STATION		s_station;	//Paramètres d'exploitation de l'équipement en mode station
	S_STRUC_EXP_ACCESS_POINT	s_access_point;	//Paramètres d'exploitation de l'équipement en mode access point
	S_STRUCT_EXP_DHCP			s_dhcp;		//Paramètres d'exploitation DHCP 
	
}S_STRUCT_EXPLOITATION;

//*******************************************
/* structure de description de l'équipement */
//*******************************************
typedef struct
{
	s8sod	ps8_nom[NB_MAX_LANGUES]	[40] ;	//Nom de l'équipement
}T_STRUCT_DESCRIPTION_EQUIPEMENT;

/*_____IV - PROTOTYPES DEFINIS ___________________________________________*/

/*_______V - CONSTANTES ET VARIABLES _____________________________________*/

