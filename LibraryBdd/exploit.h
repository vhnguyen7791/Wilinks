/*========================================================================*/
/* NOM DU FICHIER  : exploit.h			                                  */
/*========================================================================*/
/* Compilateur     : GCC                                                  */
/* Linking locator : GCC                                                  */
/* Formatter       : GCC                                                  */
/* Auteur          : CM                                                   */
/* Date			   : 30/05/2007                                           */
/* Libelle         : Base de données: gestion de l'exploitation			  */
/* Projet          : WRM100                                               */
/* Indice          : BE000                                                */
/*========================================================================*/
/* Historique      :                                                      */
//BE000 09/09/09 CM
// - CREATION
/*========================================================================*/


/*_____I - COMMENTAIRES - DEFINITIONS -  REMARQUES _______________________*/


/*_____II - DEFINE SBIT __________________________________________________*/

#ifdef _EXPLOIT
#define _EXPLOIT_EXT
#else
#define _EXPLOIT_EXT extern
#endif

/*_____III - DEFINITIONS DE TYPES_________________________________________*/

/*_____IV - PROTOTYPES DEFINIS ___________________________________________*/

//=====================================================================================
// Fonction		: u8FillExploitGeneralFile
// Entrees		: <loc_ps_exploit_gene> : pointeur sur exploit générale à initialiser
// Sortie		: <loc_u8_resultat>	: Lecture OK(si TRUE), sinon FALSE
// Auteur		: CM - 28/09/2009 -
// Description	: Lecture du fichier d'exploitation générale
//=====================================================================================
u8sod u8FillExploitGeneralFile(S_STRUC_EXP_GENERAL *loc_ps_exploit_gene);

//=====================================================================================
// Fonction		: u8EditExploitGeneralFile
// Entrees		: <loc_ps_exploit_gene> : pointeur sur exploit générale à initialiser
// Sortie		: <loc_u8_resultat>	: ecriture OK(si TRUE), sinon FALSE
// Auteur		: CM - 28/09/2009 -
// Description	: Ecriture  du fichier d'exploitation générale
//=====================================================================================
u8sod u8EditExploitGeneralFile(S_STRUC_EXP_GENERAL *loc_ps_exploit_gene);

//=====================================================================================
// Fonction		: u8FillExploitStationFile
// Entrees		: <loc_ps_exploit_station> : pointeur sur exploit station à initialiser
// Sortie		: <loc_u8_resultat>	: Lecture OK(si TRUE), sinon FALSE
// Auteur		: CM - 26/10/2009 -
// Description	: Lecture du fichier d'exploitation station
//=====================================================================================
u8sod u8FillExploitStationFile(S_STRUCT_EXP_STATION *loc_ps_exploit_station);

//=====================================================================================
// Fonction		: u8EditExploitStationFile
// Entrees		: <loc_ps_exploit_station> : pointeur sur exploit station à initialiser
// Sortie		: <loc_u8_resultat>	: ecriture OK(si TRUE), sinon FALSE
// Auteur		: CM - 26/10/2009 -
// Description	: Ecriture  du fichier d'exploitation station
//=====================================================================================
u8sod u8EditExploitStationFile(S_STRUCT_EXP_STATION *loc_ps_exploit_station);

//=====================================================================================
// Fonction		: u8FillExploitAccessPointFile
// Entrees		: <loc_ps_exploit_accesspoint> : pointeur sur exploit access point à initialiser
// Sortie		: <loc_u8_resultat>	: Lecture OK(si TRUE), sinon FALSE
// Auteur		: CM - 09/11/2009 -
// Description	: Lecture du fichier d'exploitation access point
//=====================================================================================
u8sod u8FillExploitAccessPointFile(S_STRUC_EXP_ACCESS_POINT *loc_ps_exploit_accesspoint);

//=====================================================================================
// Fonction		: u8EditExploitAccessPointFile
// Entrees		: <loc_ps_exploit_station> : pointeur sur exploit access point à initialiser
// Sortie		: <loc_u8_resultat>	: ecriture OK(si TRUE), sinon FALSE
// Auteur		: CM - 09/11/2009 -
// Description	: Ecriture  du fichier d'exploitation access point
//=====================================================================================
u8sod u8EditExploitAccessPointFile(S_STRUC_EXP_ACCESS_POINT *loc_ps_exploit_accesspoint);

//=====================================================================================
// Fonction		: u8FillExploitDHCPFile
// Entrees		: <loc_ps_exploit_dhcp< : pointeur sur exploit dhcp à initialiser
// Sortie		: <loc_u8_resultat>	: Lecture OK(si TRUE), sinon FALSE
// Auteur		: CM - 18/01/2010 -
// Description	: Lecture du fichier d'exploitation DHCP
//=====================================================================================
u8sod u8FillExploitDHCPFile(S_STRUCT_EXP_DHCP *loc_ps_exploit_dhcp);

//=====================================================================================
// Fonction		: u8EditExploitDHCPFile
// Entrees		: <loc_ps_exploit_dhcp< : pointeur sur exploit dhcp à initialiser
// Sortie		: <loc_u8_resultat>	: ecriture OK(si TRUE), sinon FALSE
// Auteur		: CM - 18/01/2010 -
// Description	: Ecriture  du fichier d'exploitation DHCP
//=====================================================================================
u8sod u8EditExploitDHCPFile(S_STRUCT_EXP_DHCP *loc_ps_exploit_dhcp);

//=====================================================================================
// Fonction		: s32ConvertRssiToDBm
// Entrees		: <loc_s32_valeur_rssi> : valeur RSSI
// Sortie		: <loc_s32_valeur_dbm>	: valeur dBm
// Auteur		: CM - 12/11/2009 -
// Description	: Convertie la valeur RSSI fournie par le driver ATheros en dBm
//		Unlike the other vendors described, Atheros uses a formula to derive dBm.
//			  RSSI_Max = 60
//			  Convert % to RSSI
//			  Subtract 95 from RSSI to derive dBm
//			  Notice that this gives a dBm range of -35dBm at 100% and -95dBm at 0%.
//=====================================================================================
s32sod s32ConvertRssiToDBm(s32sod loc_s32_valeur_rssi);

//=====================================================================================
// Fonction		: u8FillExploitEquipement
// Entrees		: >loc_ps_exploit<	: structure concernant l'exploitation de l'équipement
// Sortie		: rien
// Auteur		: CM - 08/03/2010 -
// Description	: Lecture de l'exploitation
//=====================================================================================
u8sod u8FillExploitEquipement(S_STRUCT_EXPLOITATION *loc_ps_exploit);

//=====================================================================================
// Fonction		: InitExpWifiClient
// Entrees		: <loc_ps_exp_wifi_client> : pointeur sur exploit client wifi à initialiser
// Sortie		: rien
// Auteur		: CM - 09/11/2009 -
// Description	: Initialisation d'un client wifi
//=====================================================================================
void InitExpWifiClient(S_STRUCT_EXP_WIFI_CLIENT *loc_ps_exp_wifi_client);

//=====================================================================================
// Fonction		: InitExploitAccessPoint
// Entrees		: <loc_ps_exploit_accesspoint> : pointeur sur exploit access point à initialiser
// Sortie		: rien
// Auteur		: CM - 09/11/2009 -
// Description	: Initialisation de l'exploit access point
//=====================================================================================
void InitExploitAccessPoint(S_STRUC_EXP_ACCESS_POINT *loc_ps_exploit_accesspoint);

//=====================================================================================
// Fonction		: InitExpDhcpClientOfServer
// Entrees		: <loc_ps_exp_client_dhcp_connected> : pointeur sur exploit client DHCP connecté à initialiser
// Sortie		: rien
// Auteur		: CM - 18/01/2010 -
// Description	: Initialisation d'un client DHCP du serveur
//=====================================================================================
void InitExpDhcpClientOfServer(S_STRUCT_EXP_CLIENT_DHCP *loc_ps_exp_client_dhcp_connected);

//=====================================================================================
// Fonction		: InitExploitDHCP
// Entrees		: <loc_ps_exploit_dhcp> : pointeur sur exploit dhcp à initialiser
// Sortie		: rien
// Auteur		: CM - 18/01/2010 -
// Description	: Initialisation de l'exploit DHCP
//=====================================================================================
void InitExploitDHCP(S_STRUCT_EXP_DHCP *loc_ps_exploit_dhcp);

//=====================================================================================
// Fonction		: InitExpInterface
// Entrees		: <loc_ps_exp_interface> : pointeur sur exploit interface
// Sortie		: rien
// Auteur		: CM - 26/10/2009 -
// Description	: Initialisation de l'exploit d'une interface
//=====================================================================================
void InitExpInterface(S_STRUCT_EXP_INTERFACE *loc_ps_exp_interface);

//=====================================================================================
// Fonction		: InitExploitGenerale
// Entrees		: <loc_ps_exploit_gene> : pointeur sur exploit générale à initialiser
// Sortie		: rien
// Auteur		: CM - 07/06/2007 -
// Description	: Initialisation de l'exploit générale
//=====================================================================================
void InitExploitGenerale(S_STRUC_EXP_GENERAL *loc_ps_exploit_gene);

//=====================================================================================
// Fonction		: InitExploitStation
// Entrees		: <loc_ps_exploit_station> : pointeur sur exploit station à initialiser
// Sortie		: rien
// Auteur		: CM - 26/10/2009 -
// Description	: Initialisation de l'exploit station
//=====================================================================================
void InitExploitStation(S_STRUCT_EXP_STATION *loc_ps_exploit_station);

//=====================================================================================
// Fonction		: InitBDD_ExploitEquipment
// Entrees		: <loc_ps_exploit< : pointeur sur la base de données à initialiser
// Sortie		: rien
// Auteur		: CM - 07/06/2007 -
// Description	: Initialisation de la base de données de l'exploitation
//=====================================================================================
void InitBDD_ExploitEquipment(S_STRUCT_EXPLOITATION *loc_ps_exploit);

//=====================================================================================
// Fonction		: InitModule_Exploit
// Entrees		: rien
// Sortie		: rien
// Auteur		: CM - 07/06/2007 -
// Description	: Initialisation du module de Exploit de l'équipement
//=====================================================================================
void InitModule_Exploit(void);

/*_______V - CONSTANTES ET VARIABLES _____________________________________*/

#ifdef _EXPLOIT
const T_STRUCT_DESCRIPTION_EQUIPEMENT	S_DESCRIPT_EQUIPEMENT[NB_MAX_EQUIPEMENTS] =
{	//	LANGUE_FRANCAIS		LANGUE_ANGLAIS									
	{{ "WRM100",			"WRM100"			}},//EQUIPEMENT_WRM100,
	{{ "?",					"?"					}},//EQUIPEMENT_INCONNU,
};
#else
extern const T_STRUCT_DESCRIPTION_EQUIPEMENT	S_DESCRIPT_EQUIPEMENT[NB_MAX_EQUIPEMENTS];
#endif
